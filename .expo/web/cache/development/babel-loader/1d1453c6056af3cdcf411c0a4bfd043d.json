{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Professionnel\\\\Formation\\\\3wacademy\\\\react\\\\reactnative\\\\drivev1\\\\api_front\\\\screen\\\\user\\\\login.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { loginUser } from \"../../api/user\";\nimport { connect } from 'react-redux';\nimport { connectUser } from \"../../actions/user/userAction\";\n\nvar Login = function Login(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onSubmitForm = function onSubmitForm() {\n    var data = {\n      email: email,\n      password: password\n    };\n    console.log(\"data\", data);\n    loginUser(data).then(function (res) {\n      console.log('RESPONSE loginUser(data)', res);\n      storeData(res.token);\n      var user = res.user;\n      user.token = res.token;\n      props.connectUser(res.user);\n    });\n  };\n\n  var storeData = function storeData(token) {\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('driveKey', token));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('error Token', _context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  return React.createElement(ImageBackground, {\n    style: styles.imgBackground,\n    resizeMode: \"cover\",\n    source: require(\"../../assets/bg3.jpg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scrollContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, \"Connectez-vous :\"), React.createElement(TextInput, {\n    style: styles.input,\n    type: \"text\",\n    placeholder: \"Email\",\n    placeholderTextColor: \"white\",\n    value: email,\n    onChangeText: function onChangeText(inputText) {\n      setEmail(inputText);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    secureTextEntry: true,\n    placeholder: \"Mot de passe\",\n    placeholderTextColor: \"white\",\n    value: password,\n    onChangeText: function onChangeText(inputText) {\n      setPassword(inputText);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      onSubmitForm();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Se connecter\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: hp('30%')\n  },\n  imgBackground: {\n    width: '100%',\n    height: '100%',\n    flex: 1\n  },\n  title: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginBottom: 20,\n    color: \"#17202a\"\n  },\n  scrollContainer: {\n    width: wp('100%'),\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: '#17202a',\n    width: wp('60%'),\n    height: 40,\n    borderRadius: 50,\n    marginBottom: 15,\n    marginLeft: wp('20%'),\n    paddingLeft: wp('5%'),\n    color: \"white\"\n  },\n  button: {\n    backgroundColor: \"#219653\",\n    borderRadius: 50,\n    width: wp('40%'),\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: wp('5%'),\n    marginLeft: wp('30%')\n  },\n  buttonText: {\n    fontSize: 18,\n    color: \"white\"\n  }\n});\nmapDispatchToProps = {\n  connectUser: connectUser\n};\n\nmapStateToProps = function mapStateToProps(store) {\n  return {\n    user: store.user\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["F:/Professionnel/Formation/3wacademy/react/reactnative/drivev1/api_front/screen/user/login.js"],"names":["React","useState","useEffect","AsyncStorage","widthPercentageToDP","wp","heightPercentageToDP","hp","loginUser","connect","connectUser","Login","props","email","setEmail","password","setPassword","onSubmitForm","data","console","log","then","res","storeData","token","user","setItem","styles","imgBackground","require","container","scrollContainer","title","input","inputText","button","buttonText","StyleSheet","create","flex","paddingTop","width","height","fontSize","textAlign","marginBottom","color","backgroundColor","borderRadius","marginLeft","paddingLeft","alignItems","justifyContent","marginTop","mapDispatchToProps","mapStateToProps","store"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;SAC2FC,Y;AAC3F,SACIC,mBAAmB,IAAIC,EAD3B,EAEIC,oBAAoB,IAAIC,EAF5B,QAGS,gCAHT;AAIA,SAAQC,SAAR;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAU;AAEvB,kBAA0BX,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCb,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AAEG,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAI;AAC3B,QAAIC,IAAI,GAAG;AACVL,MAAAA,KAAK,EAAEA,KADG;AAEVE,MAAAA,QAAQ,EAAEA;AAFA,KAAX;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,IAAnB;AAEAV,IAAAA,SAAS,CAACU,IAAD,CAAT,CACCG,IADD,CACM,UAACC,GAAD,EAAO;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCE,GAAvC;AACLC,MAAAA,SAAS,CAACD,GAAG,CAACE,KAAL,CAAT;AAEA,UAAIC,IAAI,GAAGH,GAAG,CAACG,IAAf;AACAA,MAAAA,IAAI,CAACD,KAAL,GAAaF,GAAG,CAACE,KAAjB;AACAZ,MAAAA,KAAK,CAACF,WAAN,CAAkBY,GAAG,CAACG,IAAtB;AAEA,KATD;AAUG,GAjBD;;AAmBA,MAAMF,SAAS,GAAG,SAAZA,SAAY,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAENrB,YAAY,CAACuB,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,CAFM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIZL,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAQA,SACF,oBAAC,eAAD;AACC,IAAA,KAAK,EAAGO,MAAM,CAACC,aADhB;AAEC,IAAA,UAAU,EAAC,OAFZ;AAGC,IAAA,MAAM,EAAEC,OAAO,wBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEH,MAAM,CAACI,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AACF,IAAA,KAAK,EAAEJ,MAAM,CAACK,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAOF,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEL,MAAM,CAACM,KADlB;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,OAHhB;AAIC,IAAA,oBAAoB,EAAC,OAJtB;AAKI,IAAA,KAAK,EAAEpB,KALX;AAMa,IAAA,YAAY,EAAE,sBAACqB,SAAD,EAAa;AACvBpB,MAAAA,QAAQ,CAACoB,SAAD,CAAR;AACH,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPE,EAiBF,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEP,MAAM,CAACM,KADlB;AAEI,IAAA,eAAe,EAAE,IAFrB;AAGI,IAAA,WAAW,EAAC,cAHhB;AAIC,IAAA,oBAAoB,EAAC,OAJtB;AAKI,IAAA,KAAK,EAAElB,QALX;AAMa,IAAA,YAAY,EAAE,sBAACmB,SAAD,EAAa;AACvBlB,MAAAA,WAAW,CAACkB,SAAD,CAAX;AACH,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBE,EA4BC,oBAAC,gBAAD;AACa,IAAA,KAAK,EAAEP,MAAM,CAACQ,MAD3B;AAEa,IAAA,OAAO,EAAE,mBAAI;AACTlB,MAAAA,YAAY;AACf,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACS,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAND,CA5BD,CAFD,CALH,CADE;AAiDH,CAjFD;;AAmFA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAEZC,IAAAA,UAAU,EAAEjC,EAAE,CAAC,KAAD;AAFF,GADoB;AAK/BqB,EAAAA,aAAa,EAAE;AAChBa,IAAAA,KAAK,EAAE,MADS;AAEhBC,IAAAA,MAAM,EAAE,MAFQ;AAGhBH,IAAAA,IAAI,EAAE;AAHU,GALgB;AAU/BP,EAAAA,KAAK,EAAE;AACRW,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,SAAS,EAAE,QAFH;AAGRC,IAAAA,YAAY,EAAE,EAHN;AAIRC,IAAAA,KAAK,EAAE;AAJC,GAVwB;AAgB/Bf,EAAAA,eAAe,EAAE;AAClBU,IAAAA,KAAK,EAAEpC,EAAE,CAAC,MAAD,CADS;AAElBuC,IAAAA,SAAS,EAAE;AAFO,GAhBc;AAoB/BX,EAAAA,KAAK,EAAE;AACNc,IAAAA,eAAe,EAAE,SADX;AAENN,IAAAA,KAAK,EAAEpC,EAAE,CAAC,KAAD,CAFH;AAGRqC,IAAAA,MAAM,EAAE,EAHA;AAIRM,IAAAA,YAAY,EAAE,EAJN;AAKRH,IAAAA,YAAY,EAAE,EALN;AAMRI,IAAAA,UAAU,EAAE5C,EAAE,CAAC,KAAD,CANN;AAOR6C,IAAAA,WAAW,EAAE7C,EAAE,CAAC,IAAD,CAPP;AAQRyC,IAAAA,KAAK,EAAE;AARC,GApBwB;AA8B/BX,EAAAA,MAAM,EAAE;AACTY,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,YAAY,EAAE,EAFL;AAGTP,IAAAA,KAAK,EAAEpC,EAAE,CAAC,KAAD,CAHA;AAITqC,IAAAA,MAAM,EAAE,EAJC;AAKTS,IAAAA,UAAU,EAAE,QALH;AAMTC,IAAAA,cAAc,EAAE,QANP;AAOTC,IAAAA,SAAS,EAAEhD,EAAE,CAAC,IAAD,CAPJ;AAQT4C,IAAAA,UAAU,EAAE5C,EAAE,CAAC,KAAD;AARL,GA9BuB;AAwC/B+B,EAAAA,UAAU,EAAE;AACXO,IAAAA,QAAQ,EAAE,EADC;AAEXG,IAAAA,KAAK,EAAE;AAFI;AAxCmB,CAAlB,CAAf;AA8CAQ,kBAAkB,GAAG;AACjB5C,EAAAA,WAAW,EAAXA;AADiB,CAArB;;AAIA6C,eAAe,GAAG,yBAACC,KAAD,EAAS;AACvB,SAAO;AACH/B,IAAAA,IAAI,EAAE+B,KAAK,CAAC/B;AADT,GAAP;AAGH,CAJD;;AAKE,eAAehB,OAAO,CAAC8C,eAAD,EAAkBD,kBAAlB,CAAP,CAA6C3C,KAA7C,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { StyleSheet, ImageBackground, Text, View, TextInput, TouchableOpacity, ScrollView, AsyncStorage } from 'react-native';\nimport {\n    widthPercentageToDP as wp,\n    heightPercentageToDP as hp,\n  } from 'react-native-responsive-screen';\nimport {loginUser} from '../../api/user';\nimport {connect} from 'react-redux';\nimport {connectUser} from '../../actions/user/userAction';\n\nconst Login = (props)=> {\n    //console.log(props)\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\n    const onSubmitForm = ()=>{\n\t\tlet data = {\n\t\t\temail: email,\n\t\t\tpassword: password\n\t\t}\n\t\tconsole.log(\"data\",data)\n\n\t\tloginUser(data)\n\t\t.then((res)=>{\n      \t\tconsole.log('RESPONSE loginUser(data)',res);\n\t\t\tstoreData(res.token);\n\n\t\t\tlet user = res.user;\n\t\t\tuser.token = res.token;\n\t\t\tprops.connectUser(res.user);\n\n\t\t})\n    }\n    \n    const storeData = async (token) => {\n        try {\n          await AsyncStorage.setItem('driveKey', token);\n        } catch (error) {\n          console.log('error Token',error)\n        }\n    }\n\n    return (\n\t\t<ImageBackground \n\t\t\tstyle={ styles.imgBackground } \n\t\t\tresizeMode='cover' \n\t\t\tsource={require('../../assets/bg3.jpg')}\n\t\t>\n    \t<View style={styles.container}>\n\t\t\n    \t\t<ScrollView style={styles.scrollContainer}>\n    \t\t\t<Text\n\t\t\t\t\tstyle={styles.title}\n\t\t\t\t>\n\t\t\t\t\tConnectez-vous :\n\t\t\t\t</Text>\n\n\t\t\t\t<TextInput\n    \t\t\t\tstyle={styles.input}\n    \t\t\t\ttype=\"text\"\n    \t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\tplaceholderTextColor=\"white\" \n    \t\t\t\tvalue={email}\n                \tonChangeText={(inputText)=>{\n                    \tsetEmail(inputText)\n                \t}}\n    \t\t\t/>\n\t\t\t\t<TextInput\n    \t\t\t\tstyle={styles.input}\n    \t\t\t\tsecureTextEntry={true}\n    \t\t\t\tplaceholder=\"Mot de passe\"\n\t\t\t\t\tplaceholderTextColor=\"white\" \n    \t\t\t\tvalue={password}\n                \tonChangeText={(inputText)=>{\n                    \tsetPassword(inputText)\n                \t}}\n    \t\t\t/>\n\n    \t\t\t<TouchableOpacity\n                    style={styles.button}\n                    onPress={()=>{\n                        onSubmitForm();\n                    }}\n\t\t\t\t>\n    \t\t\t\t<Text style={styles.buttonText}>Se connecter</Text>\n    \t\t\t</TouchableOpacity>\n    \t\t</ScrollView>\n    \t</View>\n\t\t</ImageBackground>\n    )\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n\tpaddingTop: hp('30%')\n  },\n  imgBackground: {\n\twidth: '100%',\n\theight: '100%',\n\tflex: 1 \n  },\n  title: {\n\tfontSize: 20,\n\ttextAlign: 'center',\n\tmarginBottom: 20,\n\tcolor: \"#17202a\"\n  },\n  scrollContainer: {\n\twidth: wp('100%'),\n\ttextAlign: 'center',\n  },\n  input: {\n  \tbackgroundColor: '#17202a',\n  \twidth: wp('60%'),\n\theight: 40,\n\tborderRadius: 50,\n\tmarginBottom: 15,\n\tmarginLeft: wp('20%'),\n\tpaddingLeft: wp('5%'),\n\tcolor: \"white\"\n  },\n  button: {\n\tbackgroundColor: \"#219653\",\n\tborderRadius: 50,\n\twidth: wp('40%'),\n\theight: 40,\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n\tmarginTop: wp('5%'),\n\tmarginLeft: wp('30%')\n  },\n  buttonText: {\n\t  fontSize: 18,\n\t  color: \"white\"\n  }\n});\n\nmapDispatchToProps = {\n    connectUser\n}\n\nmapStateToProps = (store)=>{\n    return {\n        user: store.user\n    }\n}\n  export default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}